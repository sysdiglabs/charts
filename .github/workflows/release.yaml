name: Release Charts

on:
  push:
    branches:
      - master

jobs:
  charts-to-release:
    runs-on: ubuntu-latest
    outputs:
      modified-charts-files: ${{ steps.updated-charts.outputs.all_modified_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve a list of updated charts
        id: updated-charts
        uses: tj-actions/changed-files@v34
        with:
          files: charts/*/Chart.yaml

  generate-changelog:
    needs: charts-to-release
    if: needs.charts-to-release.outputs.modified-charts-files
    runs-on: ubuntu-latest
    container: quay.io/ironashram/git-chglog:0.15.1-3-g6e4e27d
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate changelog for every updated chart
        shell: bash
        run: |
          set -x
          git config --global --add safe.directory '*'
          for chart_file in ${{ needs.charts-to-release.outputs.modified-charts-files }}; do
            chart_name=$(grep -Po "(?<=^name: ).+" ${chart_file})
            chart_version=$(grep -Po "(?<=^version: ).+" ${chart_file})
            chart_tag="${chart_name}-${chart_version}"
            chart_path="charts/${chart_name}"

            git-chglog \
              --config .chglog/config-changelog.yml \
              --output "${chart_path}/CHANGELOG.md" \
              --tag-filter-pattern "${chart_name}" \
              --next-tag "${chart_tag}" \
              --path "${chart_path}"

            git-chglog \
              --config .chglog/config-release.yml \
              --output "${chart_path}/RELEASE-NOTES.md" \
              --tag-filter-pattern "${chart_name}" \
              --next-tag "${chart_tag}" \
              --path "${chart_path}" "${chart_tag}"
          done

      - name: Stash changelog files
        uses: actions/upload-artifact@v2
        with:
          name: generated-changelogs
          path: |
            charts/*/RELEASE-NOTES.md
            charts/*/CHANGELOG.md

  release-charts:
    needs:
      - generate-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Unstash generated changelogs
        uses: actions/download-artifact@v2
        with:
          name: generated-changelogs
          path: charts

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run Chart Releaser
        uses: helm/chart-releaser-action@v1.4.1
        with:
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.TOOLS_JENKINS_ADMIN_ACCESS_GITHUB_TOKEN }}"

      - name: Copy README.md files to gh-pages
        run: |
          existing_worktree=$(git worktree list --porcelain | grep -B 2 "branch refs/heads/gh-pages" | head -n 1 | cut -d ' ' -f 2)
          if [[ $existing_worktree != "" ]]; then git worktree remove -f $existing_worktree; fi
          tmp_folder=$(mktemp -d)
          git worktree add ${tmp_folder} gh-pages
          rm -f -r ${tmp_folder}/charts
          cp -r charts ${tmp_folder}/
          pushd ${tmp_folder}
          git add -A "charts/**/README.md"
          git add -A "charts/**/values.yaml"
          git pull && git commit -m "github_actions_ci: Update README.md and values files" && git push
          popd

  commit-changelogs:
    needs:
      - charts-to-release
      - release-charts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Unstash generated changelogs
        uses: actions/download-artifact@v2
        with:
          name: generated-changelogs
          path: charts

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Commit CHANGELOG.md and RELEASE-NOTES.md
        run: |
          released_charts_files="${{ needs.charts-to-release.outputs.modified-charts-files }}"
          echo "released_charts_files: ${released_charts_files}"
          # Commit changes locally.
          for chart_file in ${released_charts_files}; do
              chart_name=$(grep -Po "(?<=^name: ).+" ${chart_file})
              chart_version=$(grep -Po "(?<=^version: ).+" ${chart_file})
              chart_path="charts/${chart_name}"
              git add ${chart_path}/CHANGELOG.md
              git add ${chart_path}/RELEASE-NOTES.md
              git commit -m "github_actions_ci: Update CHANGELOG and RELEASE-NOTES for ${chart_name}-${chart_version}"
          done
          # Push changes to the master branch.
          git push origin "${GITHUB_REF##*/}":master
