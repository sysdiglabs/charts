# Default values for harbor-scanner-sysdig-secure.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Specifies the number of replicas for the Scanner Adapter.
replicaCount: 1

image:
  # Specifies the image repository to pull the image from.
  repository: sysdiglabs/harbor-scanner-sysdig-secure
  # Specifies the image tag to pull.
  tag:
  # Specifies the image pull policy.
  pullPolicy: IfNotPresent

# Specifies the image pull secrets.
imagePullSecrets: []
# Specifies the chart name override.
nameOverride: ""
# Specifies the chart full name override
fullnameOverride: ""

# Specifies the custom pod annotations.
podAnnotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

rbac:
  # Creates and uses RBAC resources.
  create: true

# Enables deployment PSPs.
podSecurityContext: {}
  # fsGroup: 2000

# Enables securityContext.
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # Specifies the service type.
  type: ClusterIP
  # Specifies the port for the service.
  port: 5000

# Specifies the resources of the pod.
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Specifies the nodeSelector for scheduling.
nodeSelector: {}

# Specifies the tolerations for scheduling.
tolerations: []

# Enables affinity rules
affinity: {}

# Overrides the container entrypoint.
customEntryPoint: []

sysdig:
  secure:

    # Specifies the API Token to access Sysdig Secure. This value is **required** if the `sysdig.secure.existingSecureAPITokenSecret` is not specified.
    apiToken: ""

    # Specifies the existing secret name with API Token to access Sysdig Secure. Specify the name of a Kubernetes secret containing an 'sysdig_secure_api_token' entry
    # If both are not configured, you must provide the deployment with the `SECURE_API_TOKEN` environment variable.
    existingSecureAPITokenSecret: ""

    # Sysdig backend URL. SaaS Regions API endpoints are listed [here](https://docs.sysdig.com/en/docs/administration/saas-regions-and-ip-ranges/)
    url: "https://secure.sysdig.com"
    # Verifies whether SSL certificate when connecting to Sysdig Secure endpoint.
    verifySSL: true

proxy:
  # Specifies the URL of the proxy for HTTP connections. Leave empty if not using proxy. It sets the `http_proxy` environment variable.
  httpProxy:
  # Specifies the URL of the proxy for HTTPS connections. Leave empty if not using proxy. It sets the `https_proxy` environment variable.
  httpsProxy:
  # Comma-separated list of domain extensions proxy should not be used for.
  # Include in `noProxy` the internal IP of the kubeapi server,
  # and you probably need to add your registry if it is inside the cluster
  noProxy:

cliScanning:
  # Enables the CLI Scanning feature.
  enabled: true
  # Specifies the pullstring for the CLI Scanner Image.
  image: quay.io/sysdig/sysdig-cli-scanner:latest
  # Specifies the existing secret name with API Token to access Sysdig Secure
  existingSecureAPITokenSecret: ""

asyncMode:
  # Enables the Async-Mode feature.
  enabled: true
