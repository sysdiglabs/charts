suite: Test agent configmap collector value set by api_endpoint for all regions
templates:
  - templates/configmap.yaml
tests:
  - it: Checking default value no region specified (us1)
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: .*collector\.sysdigcloud\.com.*

  - it: Checking region 'us2'
    set:
      global:
        sysdig:
          region: us2
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: .*ingest\-us2\.app\.sysdig\.com.*

  - it: Checking region 'us3'
    set:
      global:
        sysdig:
          region: us3
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: .*ingest\.us3\.sysdig\.com.*

  - it: Checking region 'us4'
    set:
      global:
        sysdig:
          region: us4
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: .*ingest\.us4\.sysdig\.com.*

  - it: Checking region 'eu1'
    set:
      global:
        sysdig:
          region: eu1
    asserts:
        - isKind:
            of: ConfigMap
        - matchRegex:
            path: data['dragent.yaml']
            pattern: .*ingest\-eu1\.app\.sysdig\.com.*

  - it: Checking region 'au1'
    set:
      global:
        sysdig:
          region: au1
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: .*ingest\.au1\.sysdig\.com.*

  - it: Checking region 'me2'
    set:
      global:
        sysdig:
          region: me2
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: .*ingest\.me2\.sysdig\.com.*

  - it: Checking region 'au-syd-monitor'
    set:
      global:
        sysdig:
          region: au-syd-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.au-syd.monitoring.cloud.ibm.com

  - it: Checking region 'br-sao-monitor'
    set:
      global:
        sysdig:
          region: br-sao-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.br-sao.monitoring.cloud.ibm.com

  - it: Checking region 'ca-tor-monitor'
    set:
      global:
        sysdig:
          region: ca-tor-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.ca-tor.monitoring.cloud.ibm.com

  - it: Checking region 'eu-de-monitor'
    set:
      global:
        sysdig:
          region: eu-de-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.eu-de.monitoring.cloud.ibm.com

  - it: Checking region 'eu-gb-monitor'
    set:
      global:
        sysdig:
          region: eu-gb-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.eu-gb.monitoring.cloud.ibm.com

  - it: Checking region 'jp-osa-monitor'
    set:
      global:
        sysdig:
          region: jp-osa-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.jp-osa.monitoring.cloud.ibm.com

  - it: Checking region 'jp-tok-monitor'
    set:
      global:
        sysdig:
          region: jp-tok-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.jp-tok.monitoring.cloud.ibm.com

  - it: Checking region 'us-east-monitor'
    set:
      global:
        sysdig:
          region: us-east-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.us-east.monitoring.cloud.ibm.com

  - it: Checking region 'us-south-monitor'
    set:
      global:
        sysdig:
          region: us-south-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.us-south.monitoring.cloud.ibm.com

  - it: Checking region 'au-syd-private-monitor'
    set:
      global:
        sysdig:
          region: au-syd-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.au-syd.monitoring.cloud.ibm.com

  - it: Checking region 'br-sao-private-monitor'
    set:
      global:
        sysdig:
          region: br-sao-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.br-sao.monitoring.cloud.ibm.com

  - it: Checking region 'ca-tor-private-monitor'
    set:
      global:
        sysdig:
          region: ca-tor-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.ca-tor.monitoring.cloud.ibm.com

  - it: Checking region 'eu-de-private-monitor'
    set:
      global:
        sysdig:
          region: eu-de-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.eu-de.monitoring.cloud.ibm.com

  - it: Checking region 'eu-gb-private-monitor'
    set:
      global:
        sysdig:
          region: eu-gb-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.eu-gb.monitoring.cloud.ibm.com

  - it: Checking region 'jp-osa-private-monitor'
    set:
      global:
        sysdig:
          region: jp-osa-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.jp-osa.monitoring.cloud.ibm.com

  - it: Checking region 'jp-tok-private-monitor'
    set:
      global:
        sysdig:
          region: jp-tok-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.jp-tok.monitoring.cloud.ibm.com

  - it: Checking region 'us-east-private-monitor'
    set:
      global:
        sysdig:
          region: us-east-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.us-east.monitoring.cloud.ibm.com

  - it: Checking region 'us-south-private-monitor'
    set:
      global:
        sysdig:
          region: us-south-private-monitor
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.us-south.monitoring.cloud.ibm.com

  - it: Checking region 'au-syd-secure'
    set:
      global:
        sysdig:
          region: au-syd-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.au-syd.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'br-sao-secure'
    set:
      global:
        sysdig:
          region: br-sao-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.br-sao.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'ca-tor-secure'
    set:
      global:
        sysdig:
          region: ca-tor-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.ca-tor.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'eu-de-secure'
    set:
      global:
        sysdig:
          region: eu-de-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.eu-de.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'eu-gb-secure'
    set:
      global:
        sysdig:
          region: eu-gb-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.eu-gb.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'jp-osa-secure'
    set:
      global:
        sysdig:
          region: jp-osa-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.jp-osa.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'jp-tok-secure'
    set:
      global:
        sysdig:
          region: jp-tok-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.jp-tok.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'us-east-secure'
    set:
      global:
        sysdig:
          region: us-east-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.us-east.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'us-south-secure'
    set:
      global:
        sysdig:
          region: us-south-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.us-south.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'au-syd-private-secure'
    set:
      global:
        sysdig:
          region: au-syd-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.au-syd.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'br-sao-private-secure'
    set:
      global:
        sysdig:
          region: br-sao-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.br-sao.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'ca-tor-private-secure'
    set:
      global:
        sysdig:
          region: ca-tor-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.ca-tor.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'eu-de-private-secure'
    set:
      global:
        sysdig:
          region: eu-de-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.eu-de.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'eu-gb-private-secure'
    set:
      global:
        sysdig:
          region: eu-gb-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.eu-gb.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'jp-osa-private-secure'
    set:
      global:
        sysdig:
          region: jp-osa-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.jp-osa.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'jp-tok-private-secure'
    set:
      global:
        sysdig:
          region: jp-tok-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.jp-tok.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'us-east-private-secure'
    set:
      global:
        sysdig:
          region: us-east-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.us-east.security-compliance-secure.cloud.ibm.com

  - it: Checking region 'us-south-private-secure'
    set:
      global:
        sysdig:
          region: us-south-private-secure
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: ingest.private.us-south.security-compliance-secure.cloud.ibm.com

  - it: Checking wrong region input
    set:
      global:
        sysdig:
          region: us7
    asserts:
      - failedTemplate:
          errorMessage: "global.sysdig.region=us7 provided is not recognized."

  - it: Checking proxy_user and proxy_password are not set
    set:
      sysdig:
        settings:
          http_proxy:
            proxy_user: "user"
            proxy_password: "password"
    asserts:
      - notMatchRegex:
          path: data['dragent.yaml']
          pattern: .*username.*
      - notMatchRegex:
          path: data['dragent.yaml']
          pattern: .*password.*
