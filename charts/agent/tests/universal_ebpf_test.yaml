suite: Universal eBPF tests
templates:
  - templates/daemonset.yaml
tests:
  - it: Ensure that when the eBPF is disabled we create the sysdig container without SYSDIG_BPF_PROBE and SYSDIG_AGENT_DRIVER environment variables
    set:
      ebpf:
        enabled: false
    asserts:
      - isNull:
          path: spec.template.spec.initContainers[*].env[?(@.name == "SYSDIG_BPF_PROBE")]
      - isNull:
          path: spec.template.spec.initContainers[*].env[?(@.name == "SYSDIG_AGENT_DRIVER")]
      - isNull:
          path: spec.template.spec.containers[*].env[?(@.name == "SYSDIG_BPF_PROBE")]
      - isNull:
          path: spec.template.spec.containers[*].env[?(@.name == "SYSDIG_AGENT_DRIVER")]

  - it: Ensure that when the eBPF is enabled the default driver is "legacy_ebpf" we create the sysdig container with the SYSDIG_BPF_PROBE and SYSDIG_AGENT_DRIVER=legacy_ebpf environment variables
    set:
      ebpf:
        enabled: true
    asserts:
      - isEmpty:
          path: spec.template.spec.initContainers[*].env[?(@.name == "SYSDIG_BPF_PROBE")].value
      - equal:
          path: spec.template.spec.initContainers[*].env[?(@.name == "SYSDIG_AGENT_DRIVER")].value
          value: legacy_ebpf
      - isEmpty:
          path: spec.template.spec.containers[*].env[?(@.name == "SYSDIG_BPF_PROBE")].value
      - equal:
          path: spec.template.spec.containers[*].env[?(@.name == "SYSDIG_AGENT_DRIVER")].value
          value: legacy_ebpf

  - it: Ensure that when the eBPF is enabled and we specify to use the "legacy_ebpf" driver we create the sysdig container with the SYSDIG_BPF_PROBE and with SYSDIG_AGENT_DRIVER environment variables
    set:
      ebpf:
        enabled: true
        kind: legacy_ebpf
    asserts:
      - isEmpty:
          path: spec.template.spec.initContainers[*].env[?(@.name == "SYSDIG_BPF_PROBE")].value
      - equal:
          path: spec.template.spec.initContainers[*].env[?(@.name == "SYSDIG_AGENT_DRIVER")].value
          value: legacy_ebpf
      - isEmpty:
          path: spec.template.spec.containers[*].env[?(@.name == "SYSDIG_BPF_PROBE")].value
      - equal:
          path: spec.template.spec.containers[*].env[?(@.name == "SYSDIG_AGENT_DRIVER")].value
          value: legacy_ebpf

  - it: Ensure that when the eBPF is enabled and we specify to use the "universal_ebpf" driver we create the sysdig container without the SYSDIG_BPF_PROBE and with the SYSDIG_AGENT_DRIVER environment variables
    set:
      ebpf:
        enabled: true
        kind: universal_ebpf
    asserts:
      - isNull:
          path: spec.template.spec.containers[*].env[?(@.name == "SYSDIG_BPF_PROBE")]
      - equal:
          path: spec.template.spec.containers[*].env[?(@.name == "SYSDIG_AGENT_DRIVER")].value
          value: universal_ebpf

  - it: Ensure that when the eBPF is enabled and we specify to use the "universal_ebpf" driver we don't create the init container
    set:
      ebpf:
        enabled: true
        kind: universal_ebpf
    asserts:
      - isNull:
          path: spec.template.spec.initContainers

  - it: Ensure that when the eBPF is enabled and we specify to use the "legacy_ebpf" driver we create the init container
    set:
      ebpf:
        enabled: true
        kind: legacy_ebpf
    asserts:
      - matchRegex:
          path: spec.template.spec.initContainers[*].image
          pattern: quay.io/sysdig/agent-kmodule:.*

  - it: Ensure that when the eBPF is enabled and we specify to use the "universal_ebpf" driver we use the slim container
    set:
      ebpf:
        enabled: true
        kind: universal_ebpf
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[*].image
          pattern: quay.io/sysdig/agent-slim:.*

  - it: Ensure that when the eBPF is enabled and we specify to use the "universal_ebpf" driver we use the slim container also if is slim container is not enabled
    set:
      slim:
        enabled: false
      ebpf:
        enabled: true
        kind: universal_ebpf
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[*].image
          pattern: quay.io/sysdig/agent-slim:.*
