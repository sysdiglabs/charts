suite: Test enabling/disabling secure features
templates:
  - templates/configmap.yaml
tests:
  - it: Set chart defaults (secure.enabled=true)
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            security:
              enabled: true

  - it: Set secure.enabled=true
    set:
      secure:
        enabled: true
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            security:
              enabled: true

  - it: Set secure.enabled=false
    set:
      secure:
        enabled: false
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            security:
              enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            commandlines_capture:
              enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            memdump:
              enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            network_topology:
              enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            secure_audit_streams:
              enabled: false

  - it: Set secure.enabled=true and auditLog.enabled=true
    set:
      secure:
        enabled: true
      auditLog:
        enabled: true
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            security:
              enabled: true
              k8s_audit_server_enabled: true
              k8s_audit_server_port: 7765
              k8s_audit_server_url: 0.0.0.0

  - it: Set secure.enabled=false and auditLog.enabled=true
    set:
      secure:
        enabled: false
      auditLog:
        enabled: true
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: security:\n\ {2}enabled:\ false\n {2}k8s_audit_server_enabled:\ true\n\ {2}k8s_audit_server_port:\ 7765\n\ {2}k8s_audit_server_url:\ 0\.0\.0\.0

  - it: Test secure.enabled with secure_light mode specified
    set:
      monitor:
        enabled: false
      secure:
        enabled: true
      sysdig:
        settings:
          feature:
            mode: secure_light
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            app_checks_enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            security:
              enabled: true
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            jmx:
              enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            prometheus:
              enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            statsd:
              enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            memdump:
              enabled: false
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            network_topology:
              enabled: false
      - notMatchRegex:
          path: data['dragent.yaml']
          pattern: |-
            commandlines_capture:
              enabled: false
      - notMatchRegex:
          path: data['dragent.yaml']
          pattern: |-
            secure_audit_streams:
              enabled: false

  - it: Test secure.enabled=false when specifying secure_light mode
    set:
      secure:
        enabled: false
      sysdig:
        settings:
          feature:
            mode: secure_light
    asserts:
      - failedTemplate:
          errorMessage: 'Set secure.enabled=true when specifying sysdig.settings.feature.mode is `secure` or `secure_light`'

  - it: Test secure.enabled=false when specifying secure mode
    set:
      secure:
        enabled: false
      sysdig:
        settings:
          feature:
            mode: secure
    asserts:
      - failedTemplate:
          errorMessage: 'Set secure.enabled=true when specifying sysdig.settings.feature.mode is `secure` or `secure_light`'

  - it: Test secure.enabled=true when manually specifying security block content
    set:
      secure:
        enabled: true
      sysdig:
        settings:
          security:
            goodFeatureEnabled: true
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data['dragent.yaml']
          pattern: |-
            security:
              enabled: true
              goodFeatureEnabled: true
      - notMatchRegex:  # Catch the case of duplications due to sysdig.settings.security being specified
          path: data['dragent.yaml']
          pattern: |-
            security:
              goodFeatureEnabled: true
