suite: Test conditional flags and its dependent changes
templates:
  - daemonset.yaml
kubernetesProvider:
  scheme:
    "v1/Node":
      gvr:
        version: "v1"
        resource: "nodes"
      namespaced: false
  objects:
  - apiVersion: v1
    kind: Node
    metadata:
      name: fakenode
    status:
      nodeInfo:
        osImage: fake-os-image
tests:
  - it: Checking global gke autopilot
    set:
      global:
        gke:
          autopilot: true
    asserts:
      - equal:
          path: spec.template.metadata.annotations['autopilot.gke.io/no-connect']
          value: "true"
      - isNullOrEmpty:
          path: spec.template.spec.affinity
      - isEmpty:
          path: spec.template.spec.initContainers[0].env[?(@.name == "SYSDIG_BPF_PROBE")].value
      - equal:
          path: spec.template.spec.initContainers[*].volumeMounts[?(@.name == "bpf-probes")].mountPath
          value: /root/.sysdig

  - it: Checking slim enabled
    set:
      slim:
        enabled: true
      image:
        registry: quay.io
        tag: 12.9.0
        repository: testing/agent-slim
    asserts:
      - equal:
          path: spec.template.spec.containers[*].image
          value: quay.io/sysdig/agent-slim:12.9.0

  - it: Checking privileged flag set to true
    set:
      privileged: true
    asserts:
      - equal:
          path: spec.template.spec.containers[*].securityContext.privileged
          value: true

  - it: Checking privileged flag set to false with disabled ebpf
    set:
      privileged: false
      ebpf:
        enabled: false
    asserts:
      - failedTemplate:
          errorMessage: "Disabling 'privileged' flag requires eBPF and Sysdig Agent 13.3.0 or newer"

  - it: Checking privileged flag set to false with old agent version
    set:
      privileged: false
      ebpf:
        enabled: true
      image:
        tag: 13.2.0
    asserts:
      - failedTemplate:
          errorMessage: "Disabling 'privileged' flag requires eBPF and Sysdig Agent 13.3.0 or newer"

  - it: Checking privileged flag set to false, agent version 13.3.0
    set:
      privileged: false
      ebpf:
        enabled: true
      image:
        tag: 13.3.0
    asserts:
      - equal:
          path: spec.template.metadata.annotations['container.apparmor.security.beta.kubernetes.io/sysdig']
          value: "unconfined"
      - notExists:
          path: spec.template.spec.containers[*].securityContext.privileged
      - equal:
          path: spec.template.spec.containers[*].securityContext.seccompProfile.type
          value: Unconfined
      - contains:
          path: spec.template.spec.containers[*].securityContext.capabilities.drop
          content: ALL
      - exists:
          path: spec.template.spec.containers[*].securityContext.capabilities.add

  - it: Checking privileged flag set to false, not semver agent version
    set:
      privileged: false
      ebpf:
        enabled: true
      image:
        tag: whatever
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            container.apparmor.security.beta.kubernetes.io/sysdig: unconfined
      - notExists:
          path: spec.template.spec.containers[*].securityContext.privileged
      - equal:
          path: spec.template.spec.containers[*].securityContext.seccompProfile.type
          value: Unconfined
      - contains:
          path: spec.template.spec.containers[*].securityContext.capabilities.drop
          content: ALL
      - exists:
          path: spec.template.spec.containers[*].securityContext.capabilities.add
