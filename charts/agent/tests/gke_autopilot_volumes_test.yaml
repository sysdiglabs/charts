suite: Host volumes are available for agent
templates:
  - templates/daemonset.yaml
tests:
  - it: Ensure only the right volumes are mounted when running on GKE Autopilot, the agent is not slim mode without eBPF
    set:
      gke:
        autopilot: true
      slim:
        enabled: false
      ebpf:
        enabled: false
    asserts:
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/dev")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/proc")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/etc/os-release")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/boot")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/lib/modules")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/run")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/var/run")]
      # This seems not work as expected, need deeper investigation
      # - lengthEqual:
      #     path: spec.template.spec.volumes[?(@.hostPath.path =~ /\/.*/)]
      #     count: 8
      # We are going to use this "workaround" until we found a proper solution
      - isNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/usr" && @.hostPath.path =~ /\/.*/ && @.hostPath.path != "/dev" && @.hostPath.path != "/proc" && @.hostPath.path != "/etc/os-release" && @.hostPath.path != "/boot" && @.hostPath.path != "/lib/modules" && @.hostPath.path != "/usr" && @.hostPath.path != "/run" && @.hostPath.path != "/var/run")]

  - it: Ensure only the right volumes are mounted when running on GKE Autopilot, the agent is slim mode without eBPF
    set:
      gke:
        autopilot: true
      slim:
        enabled: true
      ebpf:
        enabled: false
    asserts:
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/dev")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/proc")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/etc/os-release")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/usr")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/boot")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/run")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/var/run/containerd/containerd.sock")]
      # This seems not work as expected, need deeper investigation
      # - lengthEqual:
      #     path: spec.template.spec.volumes[?(@.hostPath.path =~ /\/.*/)]
      #     count: 5
      # We are going to use this "workaround" until we found a proper solution
      - isNull:
          path: spec.template.spec.volumes[?(@.hostPath.path =~ /\/.*/ && @.hostPath.path != "/usr" && @.hostPath.path != "/run" && @.hostPath.path != "/dev" && @.hostPath.path != "/proc" && @.hostPath.path != "/etc/os-release" && @.hostPath.path != "/boot" && @.hostPath.path != "/var/run/containerd/containerd.sock")]

  - it: Ensure only the right volumes are mounted when running on GKE Autopilot, the agent is not slim mode with eBPF
    set:
      gke:
        autopilot: true
      slim:
        enabled: false
      ebpf:
        enabled: true
    asserts:
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/dev")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/proc")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/etc/os-release")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/boot")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/lib/modules")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/run")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/var/run")]
      # This seems not work as expected, need deeper investigation
      # - lengthEqual:
      #     path: spec.template.spec.volumes[?(@.hostPath.path =~ /\/.*/)]
      #     count: 8
      # We are going to use this "workaround" until we found a proper solution
      - isNull:
          path: spec.template.spec.volumes[?(@.hostPath.path =~ /\/.*/ && @.hostPath.path != "/usr" && @.hostPath.path != "/dev" && @.hostPath.path != "/proc" && @.hostPath.path != "/etc/os-release" && @.hostPath.path != "/boot" && @.hostPath.path != "/lib/modules" && @.hostPath.path != "/usr" && @.hostPath.path != "/run" && @.hostPath.path != "/var/run")]

  - it: Ensure only the right volumes are mounted when running on GKE Autopilot, the agent is slim mode with eBPF
    set:
      gke:
        autopilot: true
      slim:
        enabled: true
      ebpf:
        enabled: true
    asserts:
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/dev")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/proc")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/run")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/etc/os-release")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/usr")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/boot")]
      - isNotNull:
          path: spec.template.spec.volumes[?(@.hostPath.path == "/var/run/containerd/containerd.sock")]
      # This seems not work as expected, need deeper investigation
      # - lengthEqual:
      #     path: spec.template.spec.volumes[?(@.hostPath.path =~ /\/.*/)]
      #     count: 5
      # We are going to use this "workaround" until we found a proper solution
      - isNull:
          path: spec.template.spec.volumes[?(@.hostPath.path =~ /\/.*/ && @.hostPath.path != "/usr" && @.hostPath.path != "/run" && @.hostPath.path != "/dev" && @.hostPath.path != "/proc" && @.hostPath.path != "/etc/os-release" && @.hostPath.path != "/boot" && @.hostPath.path != "/var/run/containerd/containerd.sock")]

  - it: Ensure the SYSDIG_AGENT_DRIVER env var is not set
    set:
      gke:
        autopilot:
          enabled: true
    asserts:
      - isNull:
          path: spec.template.spec.initContainer[0].env[?(@.name != "SYSDIG_BPF_PROBE")]
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name != "SYSDIG_BPF_PROBE" && @.name != "K8S_NODE")]
