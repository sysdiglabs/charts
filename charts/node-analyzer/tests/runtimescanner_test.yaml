# requires unittest plugin: https://github.com/quintush/helm-unittest
# Run "helm unittest -3 -f ./tests/runtimescanner_test.yaml ." from within the `charts/node-analyzer` folder
suite: Test RuntimeScanner configuration
templates:
  - daemonset-node-analyzer.yaml
  # For checksums
  - clusterrole-node-analyzer.yaml
  - clusterrolebinding-node-analyzer.yaml
  - configmap-benchmark-runner.yaml
  - configmap-host-analyzer.yaml
  - configmap-host-scanner.yaml
  - configmap-image-analyzer.yaml
  - configmap-kspm-analyzer.yaml
  - secrets.yaml
  - serviceaccount-node-analyzer.yaml
  - runtimeScanner/runtime-scanner-configmap.yaml
values:
  - ./default_required_values.yaml
  - ../values.yaml

tests:
  - it: "Add extra volume through nodeAnalyzer.imageAnalyzer.extraVolumes parameter (deprecated)"
    templates:
      - daemonset-node-analyzer.yaml
    set:
      nodeAnalyzer:
        imageAnalyzer:
          extraVolumes:
            volumes:
              - name: docker-sock
                hostPath:
                  path: /var/run/docker.sock
    asserts:
      - isKind:
          of: DaemonSet
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: docker-sock
            hostPath:
              path: /var/run/docker.sock

  - it: "Add extra volume through nodeAnalyzer.extraVolumes parameter"
    templates:
      - daemonset-node-analyzer.yaml
    set:
      nodeAnalyzer:
          extraVolumes:
            volumes:
              - name: docker-sock
                hostPath:
                  path: /var/run/docker.sock
    asserts:
      - isKind:
          of: DaemonSet
      - contains:
          path: "spec.template.spec.volumes"
          content:
            name: docker-sock
            hostPath:
              path: /var/run/docker.sock

  - it: "is disabled if explicit flag is set, should override newEngineOnly"
    set:
      secure.vulnerabilityManagement.newEngineOnly: true
      nodeAnalyzer.runtimeScanner.deploy: false
      global.clusterConfig.name: "test"
    templates:
      - daemonset-node-analyzer.yaml
    asserts:
      - isKind:
          of: DaemonSet
      - equal:
          path: "spec.template.spec.containers[0].name"
          value: "sysdig-benchmark-runner"
      - equal:
          path: "spec.template.spec.containers[1].name"
          value: "sysdig-host-scanner"
      - lengthEqual:
          path: spec.template.spec.containers
          count: 2

  - it: "is disabled by default, legacy will be deployed"
    templates:
      - daemonset-node-analyzer.yaml
    asserts:
      - isKind:
          of: DaemonSet
      - equal:
          path: "spec.template.spec.containers[0].name"
          value: "sysdig-image-analyzer"
      - equal:
          path: "spec.template.spec.containers[1].name"
          value: "sysdig-host-analyzer"
      - equal:
          path: "spec.template.spec.containers[2].name"
          value: "sysdig-benchmark-runner"
      - lengthEqual:
          path: spec.template.spec.containers
          count: 3

  - it: "is enabled when newEngineOnly is set"
    set:
      secure.vulnerabilityManagement.newEngineOnly: true
      global.clusterConfig.name: "test"
    templates:
      - daemonset-node-analyzer.yaml
    asserts:
      - isKind:
          of: DaemonSet
      - equal:
          path: "spec.template.spec.containers[0].name"
          value: "sysdig-benchmark-runner"
      - equal:
          path: "spec.template.spec.containers[1].name"
          value: "sysdig-runtime-scanner"
      - equal:
          path: "spec.template.spec.containers[2].name"
          value: "sysdig-host-scanner"
      - lengthEqual:
          path: spec.template.spec.containers
          count: 3

  - it: "always expose the EVE_ENABLED and EVE_INTEGRATION_ENABLED variables when eveEnabled is not specified"
    set:
      global:
        clusterConfig:
          name: "test"
      nodeAnalyzer:
        runtimeScanner:
          deploy: true
    templates:
      - ../templates/daemonset-node-analyzer.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[?(@.name == "sysdig-runtime-scanner")].env[?(@.name == "EVE_ENABLED")]
      - isNotNull:
          path: spec.template.spec.containers[?(@.name == "sysdig-runtime-scanner")].env[?(@.name == "EVE_INTEGRATION_ENABLED")]

  - it: "always expose the EVE_ENABLED and EVE_INTEGRATION_ENABLED variables when eveEnabled is true"
    set:
      global:
        clusterConfig:
          name: "test"
      nodeAnalyzer:
        runtimeScanner:
          deploy: true
          settings:
            eveEnabled: true
    templates:
      - ../templates/daemonset-node-analyzer.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[?(@.name == "sysdig-runtime-scanner")].env[?(@.name == "EVE_ENABLED")]
      - isNotNull:
          path: spec.template.spec.containers[?(@.name == "sysdig-runtime-scanner")].env[?(@.name == "EVE_INTEGRATION_ENABLED")]

  - it: "always expose the EVE_ENABLED and EVE_INTEGRATION_ENABLED variables when eveEnabled is false"
    set:
      global:
        clusterConfig:
          name: "test"
      nodeAnalyzer:
        runtimeScanner:
          deploy: true
          settings:
            eveEnabled: false
    templates:
      - ../templates/daemonset-node-analyzer.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[?(@.name == "sysdig-runtime-scanner")].env[?(@.name == "EVE_ENABLED")]
      - isNotNull:
          path: spec.template.spec.containers[?(@.name == "sysdig-runtime-scanner")].env[?(@.name == "EVE_INTEGRATION_ENABLED")]
