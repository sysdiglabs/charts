# Default values for cloud-bench.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
## Secret values
aws:
  access_key_id: ""
  region: ""
  secret_access_key: ""
bechmarkType: "aws"
# Alternatively, you can provide the name of an existing secret. It will be used
# See example secret in 'templates/secret.yaml'
# The existing secret must provide the following entries:
#  aws_access_key_id
#  aws_secret_access_key
#  aws_region
#  secure_api_token
existingSecretName: ""
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: sysdiglabs/cloud-bench
  # Overrides the image tag whose default is the chart appVersion.
  tag: master
imagePullSecrets: []
ingress:
  annotations: {}
  enabled: false
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
logLevel: "debug"
nameOverride: ""
nodeSelector: {}
outputDir: "/tmp/cloud-custodian"
podAnnotations:
  prometheus.io/path: "/metrics"
  prometheus.io/port: "7000"
  prometheus.io/scrape: "true"
podSecurityContext: {}
# fsGroup: 2000

policyFile: "/home/custodian/aws-benchmarks.yml"
replicaCount: 1
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

schedule: "24h"
## Cloud Bench configuration
secureURL: "https://secure.sysdig.com"
securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  port: 80
  type: ClusterIP
serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
sysdig:
  secureApiToken: ""
tolerations: []
