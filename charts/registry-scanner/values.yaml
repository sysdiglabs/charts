cronjob:
  schedule: "0 6 * * *"
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 2
  restartPolicy: Never

# Specify a volume claim to write the final JSON report there instead of standard output
reportToPersistentVolumeClaim: ""

config:
  registryURL: https://my-docker-registry.com
  # In case API URL differs from registry base URL, like in Artifactory, uncomment and set registryApiUrl
  # registryApiUrl: https://my-docker-registry.com/artifactory/api/docker/
  registryUser:
  registryPassword:
  # Defaults to "dockerv2" if not specified. Available options: dockerv2, icr
  registryType:
  # AccountID - Only for ICR registry type
  # registryAccountId:
  # ICR IAM API - Only for ICR registry type
  # icrIamApi:
  # ICR IAM API Skip TLS - Only for ICR registry type
  # icrIamApiSkipTLS:
  registrySkipTLS: false
  secureBaseURL: https://secure.sysdig.com
  secureAPIToken:
  secureOnPrem: false
  secureSkipTLS: false
  maxWorkers: 1
  filter:
    include: []
    exclude: []
    maxAgeDays:
    maxTagsPerRepository:
  scan:
    # Override the default quay.io/sysdig/secure-inline-scan:2 image for the inline scanner job
    inlineScanImage: ""
    # Change container securityContext
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
ssl:
  ca:
    # For outbound connections
    # <br/>List of PEM-encoded x509 certificate authority.
    certs: {}
      # Example of certificate
      # - |
      #     -----BEGIN CERTIFICATE-----
      #     MIIDEzCCAfugAwIBAgIQKiv9U+KxPJzu1adXwC06RzANBgkqhkiG9w0BAQsFADAU
      #     MRIwEAYDVQQDEwloYXJib3ItY2EwHhcNMjIwMjIzMDY1NjExWhcNMjMwMjIzMDY1
      #     NjExWjAUMRIwEAYDVQQDEwloYXJib3ItY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IB
      #     DwAwggEKAoIBAQCqiqSoGHDbQhULBpkS+4Ip4VLF36DZpT8CJ4rOBA5+8Cnjd3XY
      #     I+n1g6ta/s/6QMEy46rHUysGrmtb/G5+dDAzfNUuAJh2vJEb3Yt8ysihxPwxLie+
      #     85dgEQirruyruvR7zczRo1BVoa7Q5M9kMPnM6a+M5mEjnVoqwdD3g4QigkSQ2ewD
      #     7AwwOALgDd4duuUUoCz+IKr+8PWBHvCpRrgwSoVNjw8fckWb4fMLaChiyr9SZfpq
      #     qjR8rRq65Yb7etmpRew61czWMv2Tv45bz6xigdB/zWe6+qAFiHqXaHDyxytkji3C
      #     ZuBxa8Xl7xYfpcczEa1qh8ByAQyWzKN5xRY1AgMBAAGjYTBfMA4GA1UdDwEB/wQE
      #     AwICpDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDwYDVR0TAQH/BAUw
      #     AwEB/zAdBgNVHQ4EFgQUslz034d5FUO+jSzlsgWlFeP/ogwwDQYJKoZIhvcNAQEL
      #     BQADggEBAJH3MIVEnnjB3XLA6cw61dWTtigLcA5caT5yEJALf126dBaPwFsOn0mi
      #     ehxdSRh+LrDzEN1MP9NJRpKQxMCy694sAzZGJggBhBGE6P0InLM56lBHlmqN2Cfy
      #     apwtueUtXm/GoB+3FEsRnjl7qzi40oadosdu0pIrqvviTjmbfm6CfxaW4crAu6Ev
      #     3fl41WW/2WWzFU7KV7ApfRfzJUZ82vo8n6CXv2ogt7DOrAE4l27KS5oqNu8K5STh
      #     FdNM4fBjDhoRhwIrurHDGabsIJa+0yThwRQSSafereqredfafLOHqV/ar6S63BGe
      #     MMNlTAQ9fvdNOTzZntye0PQYR5SR13E=
      #     -----END CERTIFICATE-----

# Additional labels to add to CronJob and Scanning Jobs.
customLabels: {}

proxy:
  httpProxy:
  httpsProxy:
  # Comma-separated list of domain extensions proxy should not be used for.
  # Include in noProxy the internal IP of the kubeapi server,
  # and you probably need to add your registry if it is inside the cluster
  noProxy:

image:
  registry: quay.io
  repository: sysdig/registry-scanner
  # Empty to defaul to the chart.yaml appVersion
  tag:
  pullPolicy: Always

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Specify the name of a Kubernetes secret containing 'secureAPIToken', 'registryUser', and 'registryPassword' entries
existingSecretName: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
