apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cluster-shield.fullname" . }}
rules:
{{- if eq "true" (include "cluster-shield.containerVulnerabilityManagementEnabled" .) }}
- apiGroups: ["", "apps", "batch", "extensions"]
  resources:
    - "cronjobs"
    - "daemonsets"
    - "deployments"
    - "jobs"
    - "namespaces"
    - "nodes"
    - "pods"
    - "replicasets"
    - "replicationcontrollers"
    - "secrets"
    - "statefulsets"
  verbs: ["get", "list", "watch"]
{{- end }}
{{- if .Values.cluster_shield.features.audit.enabled }}
- apiGroups:
    - ""
  resourceNames:
    - kube-system
  resources:
    - namespaces
  verbs:
    - get
- apiGroups:
    - ""
  resources:
    - pods
  verbs:
    - get
- apiGroups:
    - "apps"
  resources:
    - deployments
    - replicasets
    - statefulsets
    - daemonsets
  verbs:
    - get
{{- end }}
{{- if .Values.cluster_shield.features.posture.enabled }}
- apiGroups:
    - ""
    - rbac.authorization.k8s.io
    - extensions
    - apps
    - batch
    - networking.k8s.io
    - autoscaling
    - policy
    - storage.k8s.io
    - config.openshift.io
  resources:
    - pods
    - pods/log
    - namespaces
    - deployments
    - daemonsets
    - statefulsets
    - jobs
    - cronjobs
    - clusterroles
    - clusterrolebindings
    - roles
    - rolebindings
    - services
    - serviceaccounts
    - nodes
    - ingresses
    - ingressclasses
    - networkpolicies
    - replicasets
    - configmaps
    - events
    - limitranges
    - persistentvolumes
    - persistentvolumeclaims
    - replicationcontrollers
    - resourcequotas
    - controllerrevisions
    - horizontalpodautoscalers
    - podsecuritypolicies
    - storageclasses
    - volumeattachments
    - clusterversions
    - secrets
  verbs: ["get", "list", "watch"]
{{- end }}
{{- if or .Values.cluster_shield.features.kubernetes_metadata.enabled (dig "investigations" "network_security" "enabled" false .Values.cluster_shield.features) }}
- apiGroups:
    - ""
  resources:
    - pods
    - replicationcontrollers
    - services
    - events
    - limitranges
    - namespaces
    - nodes
    - resourcequotas
    - persistentvolumes
    - persistentvolumeclaims
    - configmaps
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - apps
  resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - autoscaling
  resources:
    - horizontalpodautoscalers
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - batch
  resources:
    - cronjobs
    - jobs
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - networking.k8s.io
  resources:
    - ingresses
    - networkpolicies
  verbs:
    - get
    - list
    - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - get
  - list
  - watch
{{- end }}
{{- if and (.Values.cluster_shield.features.admission_control.enabled) (.Values.cluster_shield.features.admission_control.container_vulnerability_management.enabled) }}
- apiGroups:
    - ""
  resources:
    - pods
    - configmaps
    - secrets
    - serviceaccounts
    - namespaces
  verbs:
    - get
{{- end}}

{{- if eq "true" (include "cluster.response_actions_enabled" .) }}
- apiGroups:
    - ""
  resources:
    - events
  verbs:
    - create
    - patch
{{- end }}

{{- if eq "true" (include "cluster.response_actions.rollout_restart.enabled" .) }}
- apiGroups: ["apps"]
  resources:
    - daemonsets
    - deployments
    - statefulsets
  verbs:
    - get
    - update # needed for rollout restart
    - watch
{{- end }}

{{- if eq "true" (include "cluster.response_actions.delete_pod.enabled" .) }}
- apiGroups:
  - ""
  resources:
    - pods
  verbs:
    - delete
    - get
{{- end }}

{{- if eq "true" (include "cluster.response_actions.isolate_network.enabled" .) }}
- apiGroups:
  - apps
  resources:
    - daemonsets
    - deployments
    - statefulsets
  verbs:
    - get # needed to identify the pods to isolate

- apiGroups:
    - networking.k8s.io
  resources:
    - networkpolicies
  verbs:
    - create
{{- end }}

{{- if eq "true" (include "cluster.response_actions.delete_network_policy.enabled" .) }}
- apiGroups:
    - networking.k8s.io
  resources:
    - networkpolicies
  verbs:
    - get
    - delete
{{- end }}

{{- if eq "true" (include "cluster.response_actions.get_logs.enabled" .) }}
- apiGroups:
    - apps
  resources:
    - daemonsets
    - deployments
    - statefulsets
  verbs:
    - get # needed to identify the pods to get logs from

- apiGroups:
    - ""
  resources:
    - pods
  verbs:
    - list

- apiGroups:
    - ""
  resources:
    - pods/log
  verbs:
    - get
{{- end }}

{{- if eq "true" (include "cluster.response_actions.volume_snapshot.enabled" .) }}
- apiGroups:
    - apps
  resources:
    - daemonsets
    - deployments
    - statefulsets
  verbs:
    - get # needed to identify the pods with PVCs

- apiGroups:
    - ""
  resources:
    - pods
  verbs:
    - list

- apiGroups:
    - snapshot.storage.k8s.io
  resources:
    - volumesnapshots
  verbs:
    - create
    - watch
{{- end }}

{{- if eq "true" (include "cluster.response_actions.delete_volume_snapshot.enabled" .) }}
- apiGroups:
    - snapshot.storage.k8s.io
  resources:
    - volumesnapshots
  verbs:
    - delete
    - get
    - watch
    - patch # needed to remove finalizers, which could prevent deletion
{{- end }}
