{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "required": [
    "cluster_shield",
    "image",
    "run_command",
    "proxy"
  ],
  "properties": {
    "global": {
      "type": "object",
      "description": "Global configurations",
      "properties": {
        "sysdig": {
          "type": "object",
          "description": "Global sysdig configurations",
          "properties": {
            "accessKeySecret": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the secret containing the Sysdig Agent Access Key"
            },
            "secureAPITokenSecret": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the secret containing the Sysdig Secure API Token"
            },
            "region": {
              "type": [
                "string",
                "null"
              ],
              "description": "The region where the collector is located",
              "default": "custom",
              "enum": [
                "custom",
                "au-syd-monitor",
                "au-syd-private-monitor",
                "au-syd-private-secure",
                "au-syd-secure",
                "au1",
                "br-sao-monitor",
                "br-sao-private-monitor",
                "br-sao-private-secure",
                "br-sao-secure",
                "ca-tor-monitor",
                "ca-tor-private-monitor",
                "ca-tor-private-secure",
                "ca-tor-secure",
                "eu-de-monitor",
                "eu-de-private-monitor",
                "eu-de-private-secure",
                "eu-de-secure",
                "eu-gb-monitor",
                "eu-gb-private-monitor",
                "eu-gb-private-secure",
                "eu-gb-secure",
                "eu1",
                "in1",
                "jp-osa-monitor",
                "jp-osa-private-monitor",
                "jp-osa-private-secure",
                "jp-osa-secure",
                "jp-tok-monitor",
                "jp-tok-private-monitor",
                "jp-tok-private-secure",
                "jp-tok-secure",
                "me2",
                "us-east-monitor",
                "us-east-private-monitor",
                "us-east-private-secure",
                "us-east-secure",
                "us-south-monitor",
                "us-south-private-monitor",
                "us-south-private-secure",
                "us-south-secure",
                "us1",
                "us2",
                "us3",
                "us4",
                null
              ]
            }
          }
        },
        "sslVerifyCertificate": {
          "type": [
            "boolean",
            "string"
          ],
          "enum": [
            "true",
            "false",
            true,
            false
          ]
        }
      }
    },
    "probes": {
      "type": "object",
      "description": "Configuration for the probes",
      "properties": {
        "liveness": {
          "$ref": "#/$defs/Probe",
          "description": "Configuration for the liveness probe"
        },
        "readiness": {
          "$ref": "#/$defs/Probe",
          "description": "Configuration for the readiness probe"
        }
      }
    },
    "run_command": {
      "type": "string",
      "description": "The command to be executed by the cluster-shield",
      "default": "run-all-namespaced",
      "enum": [
        "run-all-namespaced",
        "run-all"
      ]
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "The repository of the image to be used"
        },
        "tag": {
          "type": [
            "string",
            "number"
          ],
          "description": "The tag of the image to be used"
        },
        "pullPolicy": {
          "type": [
            "null",
            "string"
          ],
          "description": "The pull policy to be used",
          "default": "IfNotPresent",
          "enum": [
            null,
            "Always",
            "IfNotPresent",
            "Never"
          ]
        }
      }
    },
    "proxy": {
      "type": "object",
      "description": "Define proxy information to be used",
      "properties": {
        "httpProxy": {
          "type": [
            "string",
            "null"
          ],
          "description": "The value for the HTTP_PROXY env variable"
        },
        "httpsProxy": {
          "type": [
            "string",
            "null"
          ],
          "description": "The value for the HTTPS_PROXY env variable"
        },
        "noProxy": {
          "type": [
            "string",
            "null"
          ],
          "description": "The value for the NO_PROXY env variable"
        }
      },
      "additionalProperties": false
    },
    "cluster_shield": {
      "$ref": "#/$defs/ClusterShieldConfiguration"
    },
    "dnsPolicy": {
      "type": [
        "null",
        "string"
      ],
      "description": "Define Cluster Shield Pods DNS Policy",
      "default": null,
      "enum": [
        null,
        "ClusterFirst",
        "ClusterFirstWithHostNet",
        "Default",
        "None"
      ]
    },
    "env": {
      "type": "array",
      "description": "Define additional environment variables to be used by the Cluster Shield",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the environment variable"
          },
          "value": {
            "type": "string",
            "description": "The value of the environment variable"
          }
        },
        "required": [
          "name",
          "value"
        ]
      }
    },
    "volumes": {
      "type": "array",
      "description": "Define additional volumes to be used by the Cluster Shield",
      "items": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the volume"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "volumeMounts": {
      "type": "array",
      "description": "Define additional volume mounts to be used by the Cluster Shield pods",
      "items": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the volume"
          },
          "mountPath": {
            "type": "string",
            "description": "The path where the volume will be mounted"
          },
          "subPath": {
            "type": "string",
            "description": "The subpath of the volume to mount"
          },
          "readOnly": {
            "type": "boolean",
            "description": "Set the volume read-only",
            "default": false
          }
        },
        "required": [
          "name",
          "mountPath"
        ]
      }
    },
    "podDisruptionBudget": {
      "type": "object",
      "description": "Define the Pod Disruption Budget for the Cluster Shield pods",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Create a Pod Disruption Budget for the Cluster Shield pods",
          "default": true
        },
        "minAvailable": {
          "type": [
            "integer",
            "string"
          ],
          "description": "The minimum number of pods that must be available during voluntary disruptions"
        }
      },
      "additionalProperties": false
    }
  },
  "allOf": [
    {
      "description": "One between global.sysdig.region and cluster_shield.sysdig_endpoint.region must be set",
      "anyOf": [
        {
          "properties": {
            "cluster_shield": {
              "properties": {
                "sysdig_endpoint": {
                  "properties": {
                    "region": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "region"
                  ]
                }
              }
            }
          }
        },
        {
          "properties": {
            "global": {
              "properties": {
                "sysdig": {
                  "properties": {
                    "region": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "region"
                  ]
                }
              }
            }
          }
        },
        {
          "properties": {
            "global": {
              "properties": {
                "sysdig": {
                  "properties": {
                    "accessKey": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessKey"
                  ]
                }
              }
            }
          }
        }
      ]
    },
    {
      "description": "One between global.sysdig.accessKeySecret,global.sysdig.accessKey and cluster_shield.sysdig_endpoint.access_key must be set",
      "anyOf": [
        {
          "properties": {
            "cluster_shield": {
              "properties": {
                "sysdig_endpoint": {
                  "properties": {
                    "access_key": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "access_key"
                  ]
                }
              }
            }
          }
        },
        {
          "properties": {
            "global": {
              "properties": {
                "sysdig": {
                  "properties": {
                    "accessKeySecret": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessKeySecret"
                  ]
                }
              }
            }
          }
        },
        {
          "properties": {
            "global": {
              "properties": {
                "sysdig": {
                  "properties": {
                    "accessKey": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessKey"
                  ]
                }
              }
            }
          }
        }
      ]
    },
    {
      "description": "One between global.clusterConfig.name and cluster_shield.cluster_config.name must be set",
      "anyOf": [
        {
          "properties": {
            "cluster_shield": {
              "properties": {
                "cluster_config": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        },
        {
          "properties": {
            "global": {
              "properties": {
                "clusterConfig": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        },
        {
          "properties": {
            "global": {
              "properties": {
                "sysdig": {
                  "properties": {
                    "accessKey": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessKey"
                  ]
                }
              }
            }
          }
        }
      ]
    }
  ],
  "$defs": {
    "Probe": {
      "type": "object",
      "properties": {
        "initialDelaySeconds": {
          "type": "integer",
          "description": "Number of seconds after the container has started before the probe is initiated.",
          "default": 0
        },
        "periodSeconds": {
          "type": "integer",
          "description": "How often (in seconds) to perform the probe.",
          "default": 0
        }
      }
    },
    "ClusterShieldConfiguration": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "title": "Settings",
      "type": "object",
      "properties": {
        "log_level": {
          "type": "string",
          "description": "Minimum log severity to be reported in logs.",
          "default": "warn",
          "enum": [
            "err",
            "warn",
            "info",
            "debug",
            "trace"
          ]
        },
        "cluster_config": {
          "$ref": "#/$defs/ClusterShieldConfiguration/$defs/ClusterConfig",
          "description": "The cluster configuration"
        },
        "sysdig_endpoint": {
          "description": "Configuration for the sysdig services.",
          "$ref": "#/$defs/ClusterShieldConfiguration/$defs/SysdigEndpoint"
        },
        "ssl": {
          "description": "SSL configurations.",
          "$ref": "#/$defs/ClusterShieldConfiguration/$defs/SSL"
        },
        "features": {
          "description": "Features configurations",
          "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Features"
        },
        "monitoring_port": {
          "type": "integer",
          "default": 8080,
          "minimum": 1,
          "maximum": 65535,
          "description": "HTTP Server port used to expose healthcheck and prometheus metrics."
        },
        "cache": {
          "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Cache"
        },
        "kubernetes": {
          "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Kubernetes",
          "description": "Kubernetes configurations"
        }
      },
      "$defs": {
        "Audit": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Specify if the audit feature is enabled",
              "default": false
            },
            "http_port": {
              "type": "integer",
              "default": 6443,
              "minimum": 1,
              "maximum": 65535,
              "description": "HTTP Server port used to expose the webhook web server."
            },
            "timeout": {
              "type": "integer",
              "description": "The number of seconds for the request to time out",
              "default": 5
            },
            "excluded_namespaces": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of namespaces to exclude from the audit feature",
              "default": []
            },
            "webhook_rules": {
              "description": "List of rules used to determine if a request should be audited",
              "type": "array",
              "items": {
                "type": "object"
              },
              "default": [
                {
                  "apiGroups": [
                    "",
                    "apps",
                    "autoscaling",
                    "batch",
                    "networking.k8s.io",
                    "rbac.authorization.k8s.io",
                    "extensions"
                  ],
                  "apiVersions": [
                    "*"
                  ],
                  "operations": [
                    "*"
                  ],
                  "resources": [
                    "*/*"
                  ],
                  "scope": "*"
                }
              ]
            }
          },
          "required": [
            "enabled",
            "http_port",
            "timeout"
          ],
          "$defs": {
            "IsEnabled": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "UseFalco": {
              "properties": {
                "use_falco": {
                  "const": true
                }
              }
            }
          }
        },
        "ClusterConfig": {
          "type": "object",
          "properties": {
            "name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the cluster. Make sure to set a unique value for all the clusters being inspected",
              "examples": [
                "my-cluster"
              ]
            },
            "tags": {
              "type": "object",
              "propertyNames": {
                "pattern": "^[a-zA-Z0-9_.-]{1,255}$",
                "description": "The tag name",
                "examples": [
                  "env",
                  "region"
                ]
              },
              "additionalProperties": {
                "type": "string",
                "maxLength": 255
              },
              "description": "Tags you want to apply to the metadata sent to the Sysdig BE. They are used for instance as additional labels to the KSM metrics, with format `agent_tag_<tag_name>`",
              "examples": [
                {
                  "env": "staging",
                  "region": "us-west-1"
                }
              ]
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "SysdigEndpoint": {
          "type": "object",
          "properties": {
            "access_key": {
              "type": [
                "string",
                "null"
              ],
              "description": "Sysdig Agent Access Key",
              "examples": [
                "12345678-1234-1234-1234-123456789012"
              ]
            },
            "api_url": {
              "type": [
                "string",
                "null"
              ],
              "description": "Sysdig backend host",
              "format": "uri",
              "examples": [
                "https://www.example.com"
              ]
            },
            "secure_api_token": {
              "type": [
                "string",
                "null"
              ],
              "description": "The API Token to access Sysdig Secure",
              "examples": [
                "12345678-1234-1234-1234-123456789012"
              ]
            },
            "collector": {
              "type": [
                "string",
                "null"
              ],
              "description": "Host and port to access Sysdig Collector endpoint",
              "format": "hostport",
              "examples": [
                "collector.example.com:6443",
                "192.168.0.1:6443",
                "[2001:db8:1f70::999:de8:7648:6e8]:6443"
              ]
            },
            "region": {
              "type": [
                "string",
                "null"
              ],
              "description": "The region where the collector is located",
              "default": "custom",
              "enum": [
                "custom",
                "au-syd-monitor",
                "au-syd-private-monitor",
                "au-syd-private-secure",
                "au-syd-secure",
                "au1",
                "au1-alt",
                "br-sao-monitor",
                "br-sao-private-monitor",
                "br-sao-private-secure",
                "br-sao-secure",
                "ca-tor-monitor",
                "ca-tor-private-monitor",
                "ca-tor-private-secure",
                "ca-tor-secure",
                "eu-de-monitor",
                "eu-de-private-monitor",
                "eu-de-private-secure",
                "eu-de-secure",
                "eu-gb-monitor",
                "eu-gb-private-monitor",
                "eu-gb-private-secure",
                "eu-gb-secure",
                "eu1",
                "eu1-alt",
                "in1",
                "in1-alt",
                "jp-osa-monitor",
                "jp-osa-private-monitor",
                "jp-osa-private-secure",
                "jp-osa-secure",
                "jp-tok-monitor",
                "jp-tok-private-monitor",
                "jp-tok-private-secure",
                "jp-tok-secure",
                "me2",
                "me2-alt",
                "us-east-monitor",
                "us-east-private-monitor",
                "us-east-private-secure",
                "us-east-secure",
                "us-south-monitor",
                "us-south-private-monitor",
                "us-south-private-secure",
                "us-south-secure",
                "us1",
                "us1-alt",
                "us2",
                "us2-alt",
                "us3",
                "us3-alt",
                "us4",
                "us4-alt",
                null
              ]
            }
          },
          "required": [],
          "additionalProperties": false,
          "$defs": {
            "IsCustomRegion": {
              "properties": {
                "region": {
                  "const": "custom"
                }
              }
            },
            "SetCollectorRequired": {
              "collector": {
                "type": "string"
              },
              "required": [
                "collector"
              ]
            }
          }
        },
        "SSL": {
          "type": "object",
          "properties": {
            "verify": {
              "type": "boolean",
              "default": true,
              "description": "Define if the client must verify the backend SSL certificate."
            }
          },
          "required": [
            "verify"
          ],
          "additionalProperties": false
        },
        "ContainerVulnerabilityManagement": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Specify if the scanning feature is enabled",
              "default": false
            },
            "in_use": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/ContainerVulnerabilityManagementInUse"
            },
            "registry_ssl": {
              "description": "Verify SSL certificate when connecting to the registry",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/SSL"
            },
            "platform_services_enabled": {
              "type": "boolean",
              "description": "Specify if the platform services are enabled",
              "default": true
            },
            "local_cluster": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/ContainerVulnerabilityManagementLocal"
            },
            "filters": {
              "type": "object",
              "description": "Filters to apply to the images to scan",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/ClusterShieldConfiguration/$defs/ContainerVulnerabilityManagementFilter"
                  },
                  "examples": [
                    [
                      {
                        "type": "include",
                        "field": "k8s.container.image",
                        "value": "docker.io*"
                      },
                      {
                        "type": "exclude"
                      }
                    ]
                  ]
                }
              }
            },
            "parallel_files_analysis_count": {
              "type": "integer",
              "description": "Maximum number of files that are analyzed in parallel",
              "default": 5
            },
            "max_file_size_bytes": {
              "type": "integer",
              "description": "Maximum size in bytes for a file to be analyzed",
              "default": 104857600
            },
            "max_file_size_bytes_in_memory": {
              "type": "integer",
              "description": "Maximum size in bytes for a file to be analyzed in memory; file whose size is bigger than this are temporarily copied on to the filesystem",
              "default": 26214400
            },
            "memory_optimized_k8s_mode": {
              "type": "boolean",
              "description": "Enable memory-optimized access to Kubernetes API. Enabled by default, queries K8s using the Metadata API for all resources but Pods. Set this to false if you need to see the replicas counters, but it will require more memory.",
              "default": true
            }
          },
          "required": [
            "enabled",
            "local_cluster",
            "in_use",
            "registry_ssl"
          ],
          "$defs": {
            "IsEnabled": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            }
          }
        },
        "ContainerVulnerabilityManagementInUse": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Retrieve in-use information from the backend and aggregate them on the scan results",
              "default": true
            },
            "integration_enabled": {
              "type": "boolean",
              "description": "Share in-use information with the external integrations",
              "default": false
            }
          },
          "required": [
            "enabled",
            "integration_enabled"
          ],
          "additionalProperties": false
        },
        "ContainerVulnerabilityManagementLocal": {
          "type": "object",
          "properties": {
            "registry_secrets": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/ClusterShieldConfiguration/$defs/ContainerVulnerabilityManagementLocalRegistrySecret"
              },
              "examples": [
                [
                  {
                    "namespace": "sysdig-agent",
                    "secrets": [
                      "registry-secret"
                    ]
                  }
                ]
              ]
            }
          }
        },
        "ContainerVulnerabilityManagementLocalRegistrySecret": {
          "type": "object",
          "properties": {
            "namespace": {
              "type": "string"
            },
            "secrets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "namespace",
            "secrets"
          ],
          "additionalProperties": false
        },
        "ContainerVulnerabilityManagementFilter": {
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "include",
                "exclude"
              ]
            },
            "field": {
              "enum": [
                "k8s.container.image"
              ],
              "description": "The field to run the filter against"
            },
            "value": {
              "type": "string",
              "description": "The value to run the filter against",
              "examples": [
                "docker.io*",
                "cd.docker-registry.corp.yahoo.co.jp:4443*",
                "library*"
              ]
            }
          },
          "required": [
            "type"
          ],
          "examples": [
            {
              "type": "include",
              "field": "docker.io*",
              "value": "k8s.container.image"
            }
          ],
          "additionalProperties": false
        },
        "Kubernetes": {
          "type": "object",
          "properties": {
            "root_namespace": {
              "type": "string",
              "description": "Root namespace to use for the kubernetes resources",
              "default": "kube-system",
              "examples": [
                "kube-system"
              ]
            },
            "tls_cert_file": {
              "type": "string",
              "$comment": "HELM-AUTOGENERATED",
              "description": "Path to the TLS Certificate file",
              "examples": [
                "/cert/tls.crt"
              ]
            },
            "tls_private_key_file": {
              "type": "string",
              "$comment": "HELM-AUTOGENERATED",
              "description": "Path to the TLS Private Key file",
              "examples": [
                "/cert/tls.key"
              ]
            },
            "ca_cert_file": {
              "type": "string",
              "description": "Path to the CA Certificate file",
              "$comment": "HELM-AUTOGENERATED",
              "examples": [
                "/cert/ca.crt"
              ]
            }
          },
          "additionalProperties": false,
          "$defs": {
            "SetRequired": {
              "required": [
                "root_namespace",
                "running_namespace"
              ]
            },
            "SetTLSRequired": {
              "required": [
                "tls_cert_file",
                "tls_private_key_file",
                "ca_cert_file"
              ]
            }
          }
        },
        "KubernetesMetadata": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Specify if the Kubernetes Metadata feature is enabled",
              "default": false
            },
            "annotations_allowlist": {
              "type": "object",
              "propertyNames": {
                "pattern": "^[a-z]*$",
                "description": "The resource name in lowercase plural form",
                "examples": [
                  "nodes",
                  "pods"
                ]
              },
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The annotation key",
                  "format": "k8s-qualified-name-with-wildcard",
                  "examples": [
                    "kubernetes.io/team"
                  ]
                }
              },
              "description": "List of Kubernetes annotations keys that will be sent to the Sysdig BE e.g. for generating KSM metrics. To include them, provide a list of resource names in their plural form and Kubernetes annotation keys you would like to allow for them. Annotation keys can contain wildcard character '*'. A single '*' can be provided per resource to allow any annotation. By default, no annotations are allowed for any resource.",
              "examples": [
                {
                  "nodes": [
                    "kubernetes.io/team",
                    "kubernetes.io/role"
                  ]
                }
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled"
          ],
          "$defs": {
            "IsEnabled": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            }
          }
        },
        "RespondResponseActions": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable Response Actions",
              "default": false
            },
            "timeout": {
              "type": "integer",
              "default": 60,
              "minimum": 1,
              "maximum": 65535,
              "description": "Global timeout in seconds for actions."
            },
            "cluster": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/RespondResponseActionsCluster"
            }
          },
          "required": [
            "enabled"
          ],
          "$defs": {
            "IsEnabled": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "SetRequired": {
              "required": [
                "cluster"
              ]
            }
          }
        },
        "RespondResponseActionsCluster": {
          "type": "object",
          "properties": {
            "volume_snapshot_class": {
              "type": "string",
              "description": "The VolumeSnapshotClass used for snapshots."
            }
          },
          "required": [
            "volume_snapshot_class"
          ],
          "additionalProperties": false
        },
        "Respond": {
          "type": "object",
          "properties": {
            "response_actions": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/RespondResponseActions"
            }
          },
          "additionalProperties": false
        },
        "Monitor": {
          "type": "object",
          "properties": {
            "kube_state_metrics": {
              "description": "Influences the behaviour of Kubernetes State metrics generation",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/KubeStateMetrics"
            },
            "kubernetes_events": {
              "type": "object",
              "description": "Configuration for the Kubernetes events",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/KubernetesEvents"
            }
          },
          "additionalProperties": false,
          "required": [
            "kube_state_metrics",
            "kubernetes_events"
          ]
        },
        "KubeStateMetrics": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Controls the enablement of Kube State Metrics generation",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled"
          ],
          "$defs": {
            "IsEnabled": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            }
          }
        },
        "KubernetesEvents": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Controls the enablement of Kubernetes events collection",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled"
          ]
        },
        "Investigations": {
          "type": "object",
          "properties": {
            "network_security": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/NetworkSecurity"
            }
          },
          "additionalProperties": false,
          "required": [
            "network_security"
          ]
        },
        "NetworkSecurity": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Specify if the Network Security feature is enabled",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled"
          ]
        },
        "Posture": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Specify if the Posture feature is enabled",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled"
          ]
        },
        "AdmissionControl": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Specify if the Admission Control is enabled",
              "default": false
            },
            "failure_policy": {
              "type": "string",
              "description": "The policy to apply when an error occurs during validation",
              "enum": [
                "Ignore",
                "Fail"
              ],
              "default": "Ignore"
            },
            "dry_run": {
              "type": "boolean",
              "description": "Dry Run requests",
              "default": true
            },
            "container_vulnerability_management": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/AdmissionControlContainerVulnerabilityManagement"
            },
            "posture": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/AdmissionControlPosture"
            },
            "http_port": {
              "type": "integer",
              "default": 8443,
              "minimum": 1,
              "maximum": 65535,
              "description": "HTTP Server port used to expose the webhook web server."
            },
            "timeout": {
              "type": "integer",
              "description": "The number of seconds for the request to time out",
              "default": 5
            },
            "excluded_namespaces": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of namespaces to exclude from the admission control feature",
              "default": []
            }
          },
          "required": [
            "enabled",
            "failure_policy",
            "http_port"
          ],
          "$defs": {
            "IsEnabled": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            }
          }
        },
        "Features": {
          "type": "object",
          "title": "Features",
          "description": "Features configurations",
          "properties": {
            "admission_control": {
              "description": "Configurations for the admission control feature",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/AdmissionControl"
            },
            "audit": {
              "description": "Configurations for the audit feature",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Audit"
            },
            "container_vulnerability_management": {
              "description": "Configurations for the container vulnerability management feature",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/ContainerVulnerabilityManagement"
            },
            "monitor": {
              "type": "object",
              "description": "Configurations for the monitor features",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Monitor"
            },
            "kubernetes_metadata": {
              "description": "Configurations for the kubernetes metadata feature",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/KubernetesMetadata"
            },
            "respond": {
              "description": "Configurations for the respond feature",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Respond"
            },
            "posture": {
              "description": "Configurations for the posture feature",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Posture"
            },
            "investigations": {
              "description": "Configurations for the investigation features",
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Investigations"
            }
          },
          "required": [
            "admission_control",
            "audit",
            "container_vulnerability_management",
            "kubernetes_metadata",
            "respond",
            "monitor",
            "posture",
            "investigations"
          ]
        },
        "Responder": {
          "type": "object",
          "description": "Configuration for the Responder component",
          "properties": {
            "resources": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/Resources"
            }
          }
        },
        "AdmissionControlContainerVulnerabilityManagement": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable container vulnerability management checks",
              "default": true
            }
          }
        },
        "AdmissionControlPosture": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable Posture checks",
              "default": true
            }
          }
        },
        "Cache": {
          "type": "object",
          "description": "Configuration for the cluster shield cache",
          "properties": {
            "backend": {
              "type": "string",
              "description": "Define the cache backend to use",
              "enum": [
                "redis"
              ]
            },
            "redis": {
              "$ref": "#/$defs/ClusterShieldConfiguration/$defs/CacheRedis"
            }
          },
          "additionalProperties": false,
          "required": [],
          "allOf": [
            {
              "if": {
                "properties": {
                  "backend": {
                    "const": "redis"
                  }
                }
              },
              "then": {
                "required": [
                  "redis"
                ]
              }
            }
          ]
        },
        "CacheRedis": {
          "type": "object",
          "description": "Configuration for the cluster shield redis cache",
          "properties": {
            "address": {
              "type": "string"
            },
            "database": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "sentinel_addresses": {
              "type": "string"
            },
            "sentinel_master": {
              "type": "string"
            },
            "tls_ca": {
              "type": "string"
            },
            "tls_enabled": {
              "type": "boolean"
            },
            "tls_skip": {
              "type": "boolean"
            },
            "ttl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "cluster_config",
        "kubernetes",
        "log_level",
        "sysdig_endpoint",
        "features"
      ]
    }
  }
}
