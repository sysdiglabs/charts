{{- if .Values.scanner.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "admission-controller.scanner.fullname" . }}
  labels:
    {{- include "admission-controller.scanner.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.scanner.replicaCount }}
  selector:
    matchLabels:
      {{- include "admission-controller.scanner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.scanner.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/configmap: {{ include (print $.Template.BasePath "/scanner/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/scanner/secret.yaml") . | sha256sum }}
      labels:
        {{- include "admission-controller.scanner.labels" . | nindent 8 }}
    spec:
      {{- with .Values.scanner.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "admission-controller.scanner.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.scanner.podSecurityContext | nindent 8 }}
      volumes:
        - name: tmp-dir
          emptyDir: {}
        {{- if .Values.scanner.dockerCfgSecretName }}
        - name: dockercfg
          secret:
            defaultMode: 420
            secretName: {{ .Values.scanner.dockerCfgSecretName }}
        {{- end }}
        {{- if .Values.scanner.ssl.ca.cert }}
        - name: ca-cert
          secret:
            secretName: {{ include "admission-controller.scanner.fullname" . }}-ca
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.scanner.securityContext | nindent 12 }}
          image: "{{ include "admission-controller.scanner.image" . }}"
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
            {{- if .Values.scanner.dockerCfgSecretName }}
            - mountPath: /dockerauth
              name: dockercfg
              readOnly: true
            {{- end }}
            {{- if .Values.scanner.ssl.ca.cert }}
            - name: ca-cert
              mountPath: /ca-cert
              readOnly: true
            {{- end }}
          {{- if .Values.scanner.customEntryPoint }}
          command: {{ .Values.scanner.customEntryPoint | toYaml | nindent 10 }}
          {{- else }}
          args:
            - --server_port={{ .Values.scanner.service.port }}
            {{- if .Values.scanner.authWithSecureToken }}
            - --auth_secure_token
            {{- end }}
          {{- end }}
          imagePullPolicy: {{ .Values.scanner.image.pullPolicy }}
          env:
            {{- if (or .Values.scanner.httpProxy .Values.scanner.httpsProxy) }}
            - name: HTTP_PROXY
              value: {{ .Values.scanner.httpProxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.scanner.httpsProxy }}
            - name: NO_PROXY
              value: {{ .Values.scanner.noProxy }}
            {{- end }}
            {{- if .Values.scanner.ssl.ca.cert }}
            - name: SSL_CERT_FILE
              value: /ca-cert/root_ca_file.crt # mounted from the secret
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "admission-controller.scanner.fullname" . }}
            {{- if or .Values.sysdig.secureAPIToken .Values.sysdig.existingSecureAPITokenSecret }}
            - secretRef:
                {{- if .Values.sysdig.secureAPIToken }}
                name: {{ include "admission-controller.scanner.fullname" . }}-api-token
                {{- else }}
                name: {{ .Values.sysdig.existingSecureAPITokenSecret }}
                {{- end }}
            - secretRef:
                {{- if .Values.sysdig.secureAPIToken }}
                name: {{ include "admission-controller.scanner.fullname" . }}-auth
                {{- else }}
                name: {{ .Values.sysdig.existingSecureAPITokenSecret }}
                {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.scanner.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.scanner.resources | nindent 12 }}
      {{- with .Values.scanner.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scanner.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scanner.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
