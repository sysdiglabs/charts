{{/*
We need to put all resources that need certificate or CA Bundle together,
so the template is executed just once
 */}}
{{- $certString := include "admission-controller.webhook.gen-certs" . -}}
{{- $certList := split "$" $certString -}}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "admission-controller.webhook.fullname" . }}
webhooks:
- name: scanning.secure.sysdig.com
  matchPolicy: Equivalent
  rules:
  - apiGroups: [""]
    apiVersions: ["v1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["pods"]
    scope: "*"
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "admission-controller.webhook.fullname" . }}
      path: /allow-pod
    caBundle: {{ $certList._2 }}
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  timeoutSeconds: {{ .Values.webhook.timeoutSeconds }}
  {{- if .Values.webhook.denyOnError }}
  failurePolicy: Fail
  {{- else }}
  failurePolicy: Ignore
  {{- end }}
{{- if .Values.features.k8sAuditDetections }}
- name: audit.secure.sysdig.com
  matchPolicy: Equivalent
  rules:
  - apiGroups:
    - ""
    - apps
    - autoscaling
    - batch
    - networking.k8s.io
    - rbac.authorization.k8s.io
    - extensions
    apiVersions: ["*"]
    operations: ["*"]
    resources: ["*/*"]
    scope: "*"
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "admission-controller.webhook.fullname" . }}
      path: /k8s-audit
    caBundle: {{ $certList._2 }}
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  timeoutSeconds: {{ .Values.webhook.timeoutSeconds }}
  failurePolicy: Ignore
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "admission-controller.webhook.fullname" . }}-tls
  labels:
    {{ include "admission-controller.webhook.labels" . | nindent 4 }}
data:
  tls.crt: {{ $certList._0 }}
  tls.key: {{ $certList._1 }}
