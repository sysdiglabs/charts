apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "admission-controller.webhook.fullname" . }}
  labels:
    {{- include "admission-controller.webhook.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.webhook.replicaCount }}
  selector:
    matchLabels:
      {{- include "admission-controller.webhook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "admission-controller.webhook.podAnnotations" . | nindent 8 }}
        checksum/configmap: {{ include (print $.Template.BasePath "/webhook/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/webhook/secret.yaml") . | sha256sum }}
        checksum/certs: {{ include (print $.Template.BasePath "/webhook/admissionregistration.yaml") . | sha256sum }}
      labels:
        {{- include "admission-controller.webhook.labels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    {{- include "admission-controller.webhook.selectorLabels" . | nindent 20 }}
              weight: 10
      {{- with .Values.webhook.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "admission-controller.webhook.serviceAccountName" . }}
      securityContext:
        {{- if .Values.webhook.podSecurityContext }}
        {{- toYaml .Values.webhook.podSecurityContext | nindent 8 }}
        {{- else }}
        {{- include "admission-controller.webhook.defaultSecurityContext" . | nindent 8 }}
        {{- end }}
      {{- if .Values.webhook.hostNetwork }}
      hostNetwork: true
      {{- end }}
      containers:
        - name: {{ include "admission-controller.name" . }}
          image: "{{ include "admission-controller.webhook.image" . }}"
          {{- if .Values.webhook.customEntryPoint }}
          command: {{ .Values.webhook.customEntryPoint | toYaml | nindent 10 }}
          {{- else }}
          args:
            {{- with .Values.webhook.http.port }}
            - --http_port
            - {{ . | quote }}
            {{- end }}
            - --tls_cert_file
            - /cert/tls.crt
            - --tls_private_key_file
            - /cert/tls.key
          {{- end }}
          securityContext:
            {{- if .Values.webhook.securityContext }}
            {{- toYaml .Values.webhook.securityContext | nindent 12 }}
            {{- else }}
            {{- include "admission-controller.webhook.defaultSecurityContext" . | nindent 12}}
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            {{- end }}
          imagePullPolicy: {{ .Values.webhook.image.pullPolicy }}
          env:
            {{- if (or .Values.webhook.httpProxy .Values.webhook.httpsProxy) }}
            - name: HTTP_PROXY
              value: {{ .Values.webhook.httpProxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.webhook.httpsProxy }}
            - name: NO_PROXY
              value: {{ .Values.webhook.noProxy }},{{ include "admission-controller.scanner.fullname" . }}
            {{- end }}
            {{- if .Values.webhook.ssl.ca.cert }}
            - name: SSL_CERT_FILE
              value: /ca-cert/root_ca_file.crt # mounted from the secret
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.webhook.http.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTPS
          envFrom:
            {{- if or .Values.sysdig.secureAPIToken .Values.sysdig.existingSecureAPITokenSecret }}
            - secretRef:
                {{- if .Values.sysdig.secureAPIToken }}
                name: {{ include "admission-controller.webhook.fullname" . }}
                {{- else }}
                name: {{ .Values.sysdig.existingSecureAPITokenSecret }}
                {{- end }}
            {{- end }}
            - configMapRef:
                name: {{ include "admission-controller.webhook.fullname" . }}
          volumeMounts:
            - name: cert
              mountPath: /cert
              readOnly: true
            {{- if .Values.webhook.ssl.ca.cert }}
            - name: ca-cert
              mountPath: /ca-cert
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.webhook.resources | nindent 12 }}
      volumes:
        - name: cert
          secret:
            secretName: {{ include "admission-controller.webhook.fullname" . }}-tls
      {{- if .Values.webhook.ssl.ca.cert }}
        - name: ca-cert
          secret:
            secretName: {{ include "admission-controller.webhook.fullname" . }}-ca
      {{- end }}
    {{- with .Values.webhook.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.webhook.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.webhook.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
