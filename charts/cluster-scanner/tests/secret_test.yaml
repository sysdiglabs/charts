suite: secret
templates:
  - ../templates/secret.yaml
values:
  - ../values.yaml
release:
  name: test-release
  namespace: test-ns

tests:
  - it: "has correct name and namespace"
    set:
      global.sysdig.accessKey: "secret"
    asserts:
      - equal:
          path: metadata.name
          value: test-release-cluster-scanner
      - equal:
          path: metadata.namespace
          value: test-ns

  - it: "generates a secret resource"
    set:
      global.sysdig.accessKey: "secret"
    asserts:
      - isKind:
          of: Secret

  - it: "requires access key"
    asserts:
      - failedTemplate:
          errorMessage: "please provide a sysdig access key"

  - it: "has correct default content"
    set:
      global.sysdig.accessKey: "secret"
    asserts:
      - equal:
          path: data.sysdig_access_key
          value: "c2VjcmV0"
      - not: true
        isEmpty:
          path: data.js_server_password
      - isNull:
          path: data.cache_redis_password

  - it: "fills cache redis password, when set"
    set:
      global.sysdig.accessKey: "secret"
      imageSbomExtractor.cache.type: "distributed"
      imageSbomExtractor.cache.redis.password: "secret"
    asserts:
      - equal:
          path: data.cache_redis_password
          value: "c2VjcmV0"

  - it: "does not require redis password"
    set:
      global.sysdig.accessKey: "secret"
      imageSbomExtractor.cache.type: "distributed"
    asserts:
      - isNull:
          path: data.cache_redis_password

  - it: "generates the self-signed cert key and ca for nats, if tls is enabled and no custom cert is provided"
    set:
      global.sysdig.accessKey: "secret"
      runtimeStatusIntegrator.natsJS.tls.enabled: true
    asserts:
      - isNotNullOrEmpty:
          path: data.js_tls_key
      - isNotNullOrEmpty:
          path: data.js_tls_cert
      - isNotNullOrEmpty:
          path: data.js_tls_ca

  - it: "does not generate the self-signed cert key and ca for nats, if tls is disabled"
    set:
      global.sysdig.accessKey: "secret"
      runtimeStatusIntegrator.natsJS.tls.enabled: false
    asserts:
      - notExists:
          path: data.js_tls_key
      - notExists:
          path: data.js_tls_cert
      - notExists:
          path: data.js_tls_ca

  - it: "does not generate the self-signed cert key and ca for nats, if tls is enabled but customCerts are provided"
    set:
      global.sysdig.accessKey: "secret"
      runtimeStatusIntegrator.natsJS.tls.enabled: true
      runtimeStatusIntegrator.natsJS.tls.customCerts.existingCaSecret: "custom-secret"
    asserts:
      - notExists:
          path: data.js_tls_key
      - notExists:
          path: data.js_tls_cert
      - notExists:
          path: data.js_tls_ca
