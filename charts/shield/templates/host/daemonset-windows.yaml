{{- if and .Values.host_windows .Values.host_windows.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "host.windows.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "host.windows.workload_labels" . | nindent 4 }}
  annotations:
    {{- include "host.windows.workload_annotations" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "host.windows.selector_labels" . | nindent 6 }}
  updateStrategy:
    {{- toYaml .Values.host_windows.update_strategy | nindent 4 }}
  template:
    metadata:
      name: {{ template "host.windows.fullname" . }}
      labels:
        {{- include "host.windows.pod_labels" . | nindent 8 }}
      annotations:
        {{- include "host.windows.pod_annotations" . | nindent 8 }}
    spec:
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: "NT AUTHORITY\\SYSTEM"
      hostNetwork: true
      serviceAccountName: {{ include "host.service_account_name" . }}
      {{- if (include "host.has_priority_class" .) }}
      priorityClassName: "{{ include "host.priority_class_name" . }}"
      {{- end }}
      tolerations:
        {{- include "host.windows.tolerations" . | nindent 8 }}
      affinity:
        {{- include "host.windows.affinity" . | nindent 8 }}
      nodeSelector:
        {{- include "host.windows.node_selector" . | nindent 8 }}
      imagePullSecrets:
        {{- toYaml .Values.host_windows.image.pull_secrets | nindent 8 }}
      containers:
        - name: sysdig-host-shield
          image: {{ include "host.windows.shield_image" . }}
          imagePullPolicy: {{ .Values.host_windows.image.pull_policy }}
          args: ["run-all-namespaced"]
          resources:
            {{- (include "host.windows.resources" .) | nindent 12 }}
          env:
            - name: AGENT_APP_NAME
              value: {{ include "shield.name" . }}
            - name: K8S_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{ if .Values.features.posture.host_posture.enabled }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- end }}
            {{- $proxyEnvs := (include "common.proxy.envs" .) }}
            {{- if $proxyEnvs }}
              {{- $proxyEnvs | nindent 12 }}
            {{- end }}
            {{- $customCAEnvs := (include "common.custom_ca.envs" (merge (dict) . (dict "CACertsPath" "Sysdig/Shield/certificates/"))) }}
            {{- if $customCAEnvs }}
              {{- $customCAEnvs | nindent 12 }}
            {{- end }}
            {{- include "host.windows.env" . | nindent 12 }}
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: {{ .Values.host_windows.additional_settings.monitoring_port }}
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: {{ .Values.host_windows.additional_settings.monitoring_port }}
            initialDelaySeconds: 60
            timeoutSeconds: 10
          volumeMounts:
          - name: host-shield-config
            mountPath: Sysdig/Shield/Config
          # Agent still expects the access key to be in the AccessKey directory
          # TODO: remove this when the agent is ready.
          - name: access-key-secrets
            mountPath: Sysdig/Shield/Secrets/AccessKey
          {{- /* Custom CA */}}
          {{- include "common.custom_ca.volume_mount" (merge (dict) . (dict "CACertsPath" "Sysdig/Shield/certificates/")) | nindent 10 }}
          {{- include "host.windows.volume_mounts" . | nindent 10 }}
      terminationGracePeriodSeconds: 0
      volumes:
      {{- /* Always requested */}}
        - name: host-shield-config
          configMap:
            name: {{ include "host.windows.fullname" . }}
        - name: access-key-secrets
          secret:
            secretName: {{ include "common.credentials.access_key_secret_name" . }}
        {{- $customCAVolume := (include "common.custom_ca.volume" .) }}
        {{- if $customCAVolume }}
          {{- $customCAVolume | nindent 8 }}
        {{- end }}
        {{- include "host.windows.volumes" . | nindent 8 }}
{{- end }}
